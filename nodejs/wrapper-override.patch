diff --git a/nodejs/packages/layer/src/wrapper.ts b/nodejs/packages/layer/src/wrapper.ts
index ecbd5b0..a3bb202 100644
--- a/nodejs/packages/layer/src/wrapper.ts
+++ b/nodejs/packages/layer/src/wrapper.ts
@@ -83,6 +83,13 @@ declare global {
     defaultSdkRegistration: SDKRegistrationConfig,
   ): SDKRegistrationConfig;
   function configureTracer(defaultConfig: TracerConfig): TracerConfig;
+  function configureExporterMap(
+    exporterMap: Map<string, () => SpanExporter>,
+  ): void;
+  function configureExporters(
+    exporters: SpanExporter[],
+    exporterNames: string[],
+  ): SpanExporter[];
 
   // No explicit metric type here, but "unknown" type.
   // Because metric packages are important dynamically.
@@ -371,8 +378,16 @@ function getExportersFromEnv(): SpanExporter[] | null {
     ['console', () => new ConsoleSpanExporter()],
   ]);
   const exporters: SpanExporter[] = [];
+  const exporterNames: string[] = [];
+
+  // Allow downstream to extend the exporter map
+  if (typeof configureExporterMap === 'function') {
+    configureExporterMap(stringToExporter);
+  }
+
   process.env.OTEL_TRACES_EXPORTER.split(',').map(exporterName => {
     exporterName = exporterName.toLowerCase().trim();
+    exporterNames.push(exporterName);
     const exporter = stringToExporter.get(exporterName);
     if (exporter) {
       exporters.push(exporter());
@@ -382,6 +397,12 @@ function getExportersFromEnv(): SpanExporter[] | null {
       );
     }
   });
+
+  // Allow downstream to configure exporters (for backward compatibility)
+  if (typeof configureExporters === 'function') {
+    return configureExporters(exporters, exporterNames);
+  }
+
   return exporters;
 }
 
